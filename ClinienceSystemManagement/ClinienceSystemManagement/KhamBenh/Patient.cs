using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DataAccessLayer;
using BussinessLogicLayer;

namespace ClinienceSystemManagement.KhamBenh
{
    public partial class Patient : DevExpress.XtraEditors.XtraForm
    {
        public Patient()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }
        private Form IsExits(Type type)
        {
            foreach (Form f in this.MdiChildren)
            {
                if (f.GetType() == type)
                {
                    return f;
                }
            }
            return null;
        }
        private void btnThem_Click(object sender, EventArgs e)
        {
            Form frm = this.IsExits(typeof(PatientDetail));
            if (frm != null)
            {
                frm.Activate();
            }
            else
            {
                PatientDetail pd = new PatientDetail();
                pd.isAdd = true;
                pd.ShowDialog();
                sqlDataSource1.Fill();
            }
        }

        private void btnLamMoi_Click(object sender, EventArgs e)
        {
            ResetFillData();
            sqlDataSource1.Fill();
        }
        private void ResetFillData()
        {
            lbTen.Text = "";
            lbDiaChi.Text = "";
            lbEmail.Text = "";
            lbGioiTinh.Text = "";
            lbSoDienThoai.Text = "";
            lbThanhPho.Text = "";
            lbTuoi.Text = "";
            peAnh.EditValue = "";
            lbCongViec.Text = "";
        }

        private void grcDanhMuc_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                int Id = (int)value;
                DataClinienceDataContext db = new DataClinienceDataContext();
                var account = db.Accounts.Where(i => i.Account_ID == (int)Id).SingleOrDefault();
                var human = db.Humans.Where(i => i.Account_ID == (int)Id).SingleOrDefault();
                if (account != null)
                {
                    lbTen.Text = account.Account_Name;
                    lbDiaChi.Text = human.Account_Address;
                    lbEmail.Text = human.Account_Email;
                    lbGioiTinh.Text = human.Account_Sex;
                    lbSoDienThoai.Text = human.Account_Phone;
                    lbThanhPho.Text = human.Account_City;
                    // lbTuoi.Text = Convert.ToString(human.Account_Age);
                    DateTime age = Convert.ToDateTime(human.Account_Age);
                    int ageInYrs = DateTime.Now.Year - age.Year;
                    lbTuoi.Text = ageInYrs + " tuổi";
                    peAnh.EditValue = account.Account_Image;
                    lbCongViec.Text = human.Account_Job;
                }
                else
                {
                    XtraMessageBox.Show("Bạn chưa chọn bệnh nhân để xem thông tin chi tiết", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
        }

        private void cmsCapNhat_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                SubPatientDetail sp = new SubPatientDetail();
                sp.Id = (int)value;
                sp.ShowDialog();
                sqlDataSource1.Fill();
            }
            else
            {
                XtraMessageBox.Show("Bạn chưa chọn đối tượng để cập nhật", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void cmsXoa_Click(object sender, EventArgs e)
        {
            try
            {
                if (XtraMessageBox.Show("Bạn có muốn xóa không?", "Clinience", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    int rowIndex = gvDanhMuc.FocusedRowHandle;
                    string colID = "Account_ID";
                    object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
                    if (value != null)
                    {
                        DataClinienceDataContext dc = new DataClinienceDataContext();
                        var account = dc.Accounts.Where(s => s.Account_ID == (int)value).SingleOrDefault();
                        var human = dc.Humans.Where(s => s.Account_ID == (int)value).SingleOrDefault();
                        var patient = dc.Patients.Where(s => s.Account_ID == (int)value).SingleOrDefault();
                        if (account != null)
                        {
                            int patientId = (int)value;
                            BLL_Appointment.DeleteAppointment(patientId);
                            dc.Accounts.DeleteOnSubmit(account);
                            dc.Humans.DeleteOnSubmit(human);
                            dc.Patients.DeleteOnSubmit(patient);
                            dc.SubmitChanges();
                            sqlDataSource1.Fill();
                            XtraMessageBox.Show("Đã xóa thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                    }
                    else
                    {
                        XtraMessageBox.Show("Bạn chưa chọn đối tượng cần xóa", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    }
                }
            }
            catch (Exception)
            {
                XtraMessageBox.Show("Không được phép xóa ,bệnh nhân đã nằm trong danh mục khác", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }



        }

        private void btnXuatFile_Click(object sender, EventArgs e)
        {
            string FileName = "E:\\DanhSachBenhNhan.xls";
            grcDanhMuc.ExportToXls(FileName);
        }

        private void csmXem_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                int Id = (int)value;
                DataClinienceDataContext db = new DataClinienceDataContext();
                var account = db.Accounts.Where(i => i.Account_ID == (int)Id).SingleOrDefault();
                var human = db.Humans.Where(i => i.Account_ID == (int)Id).SingleOrDefault();
                if (account != null)
                {
                    lbTen.Text = account.Account_Name;
                    lbDiaChi.Text = human.Account_Address;
                    lbEmail.Text = human.Account_Email;
                    lbGioiTinh.Text = human.Account_Sex;
                    lbSoDienThoai.Text = human.Account_Phone;
                    lbThanhPho.Text = human.Account_City;
                    //  lbTuoi.Text = Convert.ToString(human.Account_Age);
                    DateTime age = Convert.ToDateTime(human.Account_Age);
                    int ageInYrs = DateTime.Now.Year - age.Year;
                    lbTuoi.Text = ageInYrs + " tuổi";
                    peAnh.EditValue = account.Account_Image;
                    lbCongViec.Text = human.Account_Job;
                }
                else
                {
                    XtraMessageBox.Show("Bạn chưa chọn bệnh nhân để xem thông tin chi tiết", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
        }

        private void csmTaoPK_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                SubExamination ex = new SubExamination();
                ex.Id = (int)value;
                ex.ShowDialog();
                sqlDataSource1.Fill();
            }
            else
            {
                XtraMessageBox.Show("Bạn chưa chọn bệnh nhân để tạo phiên khám", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void btnTaoPK_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                SubExamination ex = new SubExamination();
                ex.Id = (int)value;
                ex.ShowDialog();
                sqlDataSource1.Fill();
            }
            else
            {
                XtraMessageBox.Show("Bạn chưa chọn bệnh nhân để tạo phiên khám", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void csmLichSu_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Account_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                int Id = (int)value;
                History hs = new History();
                hs.patientId = Id;
                hs.openForm = false;
                hs.ShowDialog();      
            }
        }
    }
}