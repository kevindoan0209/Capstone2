using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using BussinessLogicLayer;
using DataAccessLayer;

namespace ClinienceSystemManagement.HeThong
{
    public partial class ParaclinicalDetail : DevExpress.XtraEditors.XtraForm
    {
        public string Id = null;
        public bool isAdd = true;
        public ParaclinicalDetail()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }
        private void ThemDanhMucCanLamSang_Load(object sender, EventArgs e)
        {
            FillDataUpdate();
        }

        private void Reset()
        {
            txtTen.Text = "";
            txtMa.Text = "";
            txtGiaTriNho.Text = "";
            txtGiaTriLon.Text = "";
            txtTenKhac.Text = "";
            txtDonVi.Text = "";
            txtDanhMuc.Text = "";
            txtDiaChi.Text = "";
            txtGhiChu.Text = "";
            txtMoTa.Text = "";
            txtThamChieu.Text = "";
        }

        private void btnHuy_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void FillDataUpdate()
        {
            if (Id != null)
            {
                DataClinienceDataContext db = new DataClinienceDataContext();
                var para = db.Paraclinicals.Where(i => i.Paraclinical_ID == Id).SingleOrDefault();
                if (para != null)
                {
                    txtTen.EditValue = para.Paraclinical_Name;
                    txtMa.EditValue = para.Paraclinical_ID;
                    txtGiaTriNho.EditValue = para.Paraclinical_ValueMin;
                    txtGiaTriLon.EditValue = para.Paraclinical_ValueMax;
                    txtTenKhac.EditValue = para.Paraclinical_AnotherName;
                    txtDonVi.EditValue = para.Paraclinical_Unit;
                    txtDanhMuc.EditValue = para.Paraclinical_Category;
                    txtDiaChi.EditValue = para.Paraclinical_Link;
                    txtGhiChu.EditValue = para.Paraclinical_Note;
                    txtMoTa.EditValue = para.Paraclinical_Description;
                    txtThamChieu.EditValue = para.Paraclinical_ReferenceValue;
                    lkePhanNhom.EditValue = para.Paraclinical_Group_ID;
                    txtMa.ReadOnly = true;
                }
            }
        }

        private void SaveUpdate()
        {
            try
            {
                if (string.IsNullOrEmpty(txtTen.Text))
                {
                    XtraMessageBox.Show("Vui lòng nhập tên cận lâm sàng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    txtTen.Focus();
                }
                else
                {
                    if (string.IsNullOrEmpty(txtMa.Text))
                    {
                        XtraMessageBox.Show("Vui lòng nhập mã cận lâm sàng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                        txtMa.Focus();
                    }
                    else
                    {
                        if (lkePhanNhom.Text == "Chọn nhóm")
                        {
                            XtraMessageBox.Show("Vui lòng chọn nhóm cận lâm sàng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                            lkePhanNhom.Focus();
                        }
                        else
                        {
                            string name = txtTen.Text;
                            string id = txtMa.Text;
                            double valueMin = Convert.ToDouble(txtGiaTriNho.Value.ToString());
                            double valueMax = Convert.ToDouble(txtGiaTriLon.Value.ToString());
                            string anotherName = txtTenKhac.Text;
                            string unit = txtDonVi.Text;
                            string category = txtDanhMuc.Text;
                            string link = txtDiaChi.Text;
                            string note = txtGhiChu.Text;
                            string description = txtMoTa.Text;
                            string referenceValue = txtThamChieu.Text;
                            string group = lkePhanNhom.GetColumnValue("Paraclinical_Group_ID").ToString();
                            int groupId = Convert.ToInt32(group.ToString());
                            BLL_Paraclinical.UpdateParaclinical(name, id, valueMin, valueMax, anotherName, unit, category, link, note, description, referenceValue, groupId);
                            this.Close();
                            XtraMessageBox.Show("Cập nhật thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi" + ex.Message);
            }
        }

        private void btnTao_Click(object sender, EventArgs e)
        {
            try
            {
                if (isAdd == false)
                {
                    SaveUpdate();
                }
                else
                {
                    if (string.IsNullOrEmpty(txtTen.Text))
                    {
                        XtraMessageBox.Show("Vui lòng nhập tên cận lâm sàng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                        txtTen.Focus();
                    }
                    else
                    {
                        if (string.IsNullOrEmpty(txtMa.Text))
                        {
                            XtraMessageBox.Show("Vui lòng nhập mã cận lâm sàng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                            txtMa.Focus();
                        }
                        else
                        {
                            if (lkePhanNhom.Text == "Chọn nhóm")
                            {
                                XtraMessageBox.Show("Vui lòng chọn nhóm cận lâm sàng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                                lkePhanNhom.Focus();
                            }
                            else
                            {
                                string name = txtTen.Text;
                                string id = txtMa.Text;
                                double valueMin = Convert.ToDouble(txtGiaTriNho.Value.ToString());
                                double valueMax = Convert.ToDouble(txtGiaTriLon.Value.ToString());
                                string anotherName = txtTenKhac.Text;
                                string unit = txtDonVi.Text;
                                string category = txtDanhMuc.Text;
                                string link = txtDiaChi.Text;
                                string note = txtGhiChu.Text;
                                string description = txtMoTa.Text;
                                string referenceValue = txtThamChieu.Text;
                                string group = lkePhanNhom.GetColumnValue("Paraclinical_Group_ID").ToString();
                                int groupId = Convert.ToInt32(group.ToString());
                                BLL_Paraclinical.InsertParaclinical(name, id, valueMin, valueMax, anotherName, unit, category, link, note, description, referenceValue, groupId);
                                XtraMessageBox.Show("Đã thêm thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                this.Close();
                            }
                        }
                    }
                }
            }
            catch (Exception)
            {
                MessageBox.Show("Mã đối tượng này đã tồn tại");
            }
        }
    }
}