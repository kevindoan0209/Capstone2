using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DataAccessLayer;
using BussinessLogicLayer;

namespace ClinienceSystemManagement.HeThong
{
    public partial class MedicineUnit : DevExpress.XtraEditors.XtraForm
    {
        public int Id;
        public bool isAdd = true;
        public MedicineUnit()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource4.Fill();
        }

        private void Reset()
        {
            txtGhiChu.Text = "";
            txtMa.Text = "";
            txtTen.Text = "";
        }
        private void FillDataUpdate()
        {
            if (Id != 0)
            {
                DataClinienceDataContext db = new DataClinienceDataContext();
                var unit = db.Medicine_Units.Where(i => i.Unit_ID == Id).SingleOrDefault();
                if (unit != null)
                {
                    txtMa.EditValue = unit.Unit_ID;
                    txtTen.EditValue = unit.Unit_Name;
                    txtGhiChu.EditValue = unit.Unit_Note;
                    txtMa.ReadOnly = true;
                }
            }
        }
        private void SaveUpdate()
        {
            try
            {

                if (string.IsNullOrEmpty(txtTen.Text))
                {
                    XtraMessageBox.Show("Vui lòng nhập tên đơn vị", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    txtTen.Focus();
                }
                else
                {
                    string name = txtTen.Text;
                    string id = txtMa.Text;
                    string description = txtGhiChu.Text;
                    BLL_Medicine.UpdateUnit(id, name, description);
                    Reset();
                    isAdd = true;
                    sqlDataSource4.Fill();
                    XtraMessageBox.Show("Cập nhật thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }

            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi" + ex.Message);
            }
        }
        private void btnTao_Click(object sender, EventArgs e)
        {
            try
            {
                if (isAdd == false)
                {
                    SaveUpdate();
                }
                else
                {
                    if (string.IsNullOrEmpty(txtTen.Text))
                    {
                        XtraMessageBox.Show("Vui lòng nhập tên đơn vị", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                        txtTen.Focus();
                    }
                    else
                    {
                        string name = txtTen.Text;
                        string description = txtGhiChu.Text;
                        BLL_Medicine.InsertUnit(name, description);
                        Reset();
                        sqlDataSource4.Fill();
                        XtraMessageBox.Show("Đã thêm thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi" + ex.Message);
            }
        }

        private void btnReset_Click(object sender, EventArgs e)
        {
            Reset();
            sqlDataSource4.Fill();
        }

        private void MedicineUnit_Load(object sender, EventArgs e)
        {
            FillDataUpdate();
            txtMa.ReadOnly = true;
        }

        private void cmsCapNhat_Click(object sender, EventArgs e)
        {
            int rowIndex = gvDanhMuc.FocusedRowHandle;
            string colID = "Unit_ID";
            object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
            if (value != null)
            {
                Id = (int)value;
                isAdd = false;
                FillDataUpdate();
                sqlDataSource4.Fill();
            }
            else
            {
                XtraMessageBox.Show("Bạn chưa chọn đối tượng để cập nhật", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }

        private void cmsXoa_Click(object sender, EventArgs e)
        {
            if (XtraMessageBox.Show("Bạn có muốn xóa không?", "Clinience", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                int rowIndex = gvDanhMuc.FocusedRowHandle;
                string colID = "Unit_ID";
                object value = gvDanhMuc.GetRowCellValue(rowIndex, colID);
                if (value != null)
                {
                    DataClinienceDataContext dc = new DataClinienceDataContext();
                    var ing = dc.Medicine_Units.Where(s => s.Unit_ID == (int)value).SingleOrDefault();
                    if (ing != null)
                    {
                        dc.Medicine_Units.DeleteOnSubmit(ing);
                        dc.SubmitChanges();
                        sqlDataSource4.Fill();
                        XtraMessageBox.Show("Đã xóa thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
                else
                {
                    XtraMessageBox.Show("Bạn chưa chọn đối tượng cần xóa", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
            }
        }
    }
}