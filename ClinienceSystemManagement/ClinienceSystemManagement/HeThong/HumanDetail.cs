using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using DataAccessLayer;
using BussinessLogicLayer;

namespace ClinienceSystemManagement.HeThong
{
    public partial class HumanDetail : DevExpress.XtraEditors.XtraForm
    {
        public int Id;
        public bool isAdd = true;
        public HumanDetail()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource2.Fill();
        }
        public void peAnh_Click(object sender, EventArgs e)
        {
            try
            {
                OpenFileDialog openFileDialog = new OpenFileDialog();
                openFileDialog.Filter = ("Image Files |*.png; *.bmp; *.jpg;*.jpeg; *.gif;");
                openFileDialog.FilterIndex = 4;
                openFileDialog.RestoreDirectory = true;
                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    txtAnh.Text = openFileDialog.FileName;
                    peAnh.Image = Image.FromFile(openFileDialog.FileName);
                }
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show("Không thể được tải ảnh", ex.Message);
            }
            
        }
        private void peChuKi_Click(object sender, EventArgs e)
        {
            try
            {
                OpenFileDialog openFileDialog = new OpenFileDialog();
                openFileDialog.Filter = ("Image Files |*.png; *.bmp; *.jpg;*.jpeg; *.gif;");
                openFileDialog.FilterIndex = 4;
                openFileDialog.RestoreDirectory = true;
                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    txtChuKi.Text = openFileDialog.FileName;
                    peChuKi.Image = Image.FromFile(openFileDialog.FileName);
                }
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show("Không thể được tải ảnh", ex.Message);
            }
        }

        private void HumanDetail_Load(object sender, EventArgs e)
        {
            FillDataUpdate();
            txtMa.ReadOnly = true;
        }
        public void FillDataUpdate()
        {
            if (Id != 0)
            {
                DataClinienceDataContext db = new DataClinienceDataContext();
                var account = db.Accounts.Where(i => i.Account_ID == (int)Id).SingleOrDefault();
                if (account != null)
                {
                    txtTen.EditValue = account.Account_Type;
                    txtMa.EditValue = account.Account_ID;
                    txtTenDangNhap.EditValue = account.Account_UserName;
                    peAnh.EditValue = account.Account_Image;
                    peChuKi.EditValue = account.Account_Signature;
                    txtAnh.EditValue = account.Account_Image;
                    txtChuKi.EditValue = account.Account_Signature;
                    txtMatKhau.EditValue = account.Account_Password;
                    lkePhanQuyen.EditValue = account.Account_Type_ID;
                    txtMa.ReadOnly = true;
                }
            }
        }
        private void SaveUpdate()
        {
            try
            {
                if (string.IsNullOrEmpty(txtTen.Text))
                {
                    XtraMessageBox.Show("Vui lòng nhập tên người sử dụng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                    txtTen.Focus();
                }
                else
                {
                    if (string.IsNullOrEmpty(txtTenDangNhap.Text))
                    {
                        XtraMessageBox.Show("Vui lòng nhập tên đăng nhập", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                        txtTenDangNhap.Focus();
                    }
                    else
                    {
                        if (lkePhanQuyen.Text == "Chọn quyền hạn")
                        {
                            XtraMessageBox.Show("Vui lòng chọn phân quyền", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                            lkePhanQuyen.Focus();
                        }
                        else
                        {
                            if (string.IsNullOrEmpty(txtMatKhau.Text))
                            {
                                XtraMessageBox.Show("Vui lòng nhập mật khẩu", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                                txtMatKhau.Focus();
                            }
                            else
                            {
                                if (txtMatKhau.Text != txtMatKhau2.Text)
                                {
                                    XtraMessageBox.Show("Mật khẩu không trùng khớp", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                                    txtMatKhau2.Focus();
                                }
                                else
                                {
                                    int id = Int32.Parse(txtMa.Text);
                                    string name = txtTen.Text;
                                    string username = txtTenDangNhap.Text;
                                    string password = txtMatKhau.Text;
                                    string image = txtAnh.Text;
                                    string signature = txtChuKi.Text;
                                    string group = lkePhanQuyen.GetColumnValue("Account_Type_ID").ToString();
                                    int type = Int32.Parse(group);
                                    BLL_Human.UpdateAccount(id, name, username, password, image, signature, type);
                                    this.Close();
                                    XtraMessageBox.Show("Cập nhật thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                }
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi" + ex.Message);
            }
        }
        private void btnTao_Click(object sender, EventArgs e)
        {
            try
            {
                if (isAdd == false)
                {
                    SaveUpdate();
                }
                else
                {
                    if (string.IsNullOrEmpty(txtTen.Text))
                    {
                        XtraMessageBox.Show("Vui lòng nhập tên người sử dụng", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                        txtTen.Focus();
                    }
                    else
                    {
                        if (string.IsNullOrEmpty(txtTenDangNhap.Text))
                        {
                            XtraMessageBox.Show("Vui lòng nhập tên đăng nhập", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                            txtTenDangNhap.Focus();
                        }
                        else
                        {
                            if (lkePhanQuyen.Text == "Chọn quyền hạn")
                            {
                                XtraMessageBox.Show("Vui lòng chọn phân quyền", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                                lkePhanQuyen.Focus();
                            }
                            else
                            {
                                if (string.IsNullOrEmpty(txtMatKhau.Text))
                                {
                                    XtraMessageBox.Show("Vui lòng nhập mật khẩu", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                                    txtMatKhau.Focus();
                                }
                                else
                                {
                                    if (txtMatKhau.Text != txtMatKhau2.Text)
                                    {
                                        XtraMessageBox.Show("Mật khẩu không trùng khớp", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                                        txtMatKhau2.Focus();
                                    }
                                    else
                                    {
                                        int id = Int32.Parse(txtMa.Text);
                                        string name = txtTen.Text;
                                        string username = txtTenDangNhap.Text;
                                        string password = txtMatKhau.Text;
                                        string image = txtAnh.Text;
                                        string signature = txtChuKi.Text;
                                        string group = lkePhanQuyen.GetColumnValue("Account_Type_ID").ToString();
                                        int type = Int32.Parse(group);
                                        BLL_Human.InsertAccount(name, username, password, image, signature, type);
                                        this.Close();
                                        XtraMessageBox.Show("Cập nhật thành công", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Information);
                                    }
                                }

                            }

                        }
                    }
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi :" + ex.Message);
            }
        }

        private void btnHuy_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        private void txtMatKhau_Validating(object sender, CancelEventArgs e)
        {
            if (txtMatKhau.Text.Length > 10 || txtMatKhau.Text.Length < 6)
            {
                XtraMessageBox.Show("Mật khẩu phải từ 6 đến 10 kí tự", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                txtMatKhau.Focus();
            }
        }

        private void txtMatKhau2_Validating(object sender, CancelEventArgs e)
        {
            if (txtMatKhau2.Text.Length > 10 || txtMatKhau2.Text.Length < 6)
            {
                XtraMessageBox.Show("Mật khẩu phải từ 6 đến 10 kí tự", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                txtMatKhau2.Focus();
            }
        }

        private void txtTenDangNhap_Validating(object sender, CancelEventArgs e)
        {
            if (txtTenDangNhap.Text.Length > 20)
            {
                XtraMessageBox.Show("Tên đăng nhập vượt quá giới hạn cho phép (>20)", "Clinience", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                txtTenDangNhap.Focus();
            }
        }
    }
}